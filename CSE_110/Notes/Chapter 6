# 6.1 What is a Method?

A computer program can be viewed as a package of responsibilities. Those responsibilities come in two forms:

   1. Things the program must know, remember, or keep track of
   2. Things the program must do; instructions it must carry out

Variables
    The Knowing of the program.

Methods
    The doing of the program.

# 6.3 What are Arguments?

Arguments :
    1. Gives methods what they need.
    2. Are evaluated to values before the method is called; the values are passed to the methods


# 6.6 String Methods

## String character indices
    1. A String is a sequence of characters in memory. 
    2. Each character in a String has a position number called an index, starting with 0 (not 1).
    3. For example, the String "Mary" is a sequence of 4 characters. The 'M' is at index 0, the 'a' is at index 1, and the 'y' is at index 3

    
    Accessing string characters
        The String data type comes with several useful methods. One such method is the charAt method. The notation someString.charAt(x) returns the character at index x in the String someString.

    Determining the number of characters in a String
        The String data type comes with several useful methods. One such method is the length method. For any non-empty String the last character is always at index length - 1. Ex: "Hey" has length 3, with 'y' at index 2. The method call s1.length() returns s1's length. Ex: If s1 is "Hey", s1.length() returns 3.

    Finding a String in a String
        The String data type comes with several useful methods. One such useful method is the indexOf method. The method call someString.indexOf("me") returns the index where the String "me" is first found in the String someString. If the String "me" is not found in the String someString, then someString.indexOf("me") returns -1 to indicate that the String "me" was not found in the String someString.

### Table: indexOf() and substring() methods, invoked as myString.indexOf()
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    indexOf()    |      indexOf(item) gets index of first item occurrence in a string, else -1.                                          // userText is "Help me!"
                 |      Item may be char, String                                                                                         userText.indexOf('p')     // Returns 3 
                 |      variable, or string literal.                                                                                     userText.indexOf('e')     // Returns 1 (first occurrence) 
                 |                                                                                                                       userText.indexOf('z')     // Returns -1 
                 |      indexOf(item, indx) starts at index indx.                                                                        userText.indexOf("me")    // Returns 5
                 |                                                                                                                       userText.indexOf('e', 2)  // Returns 6 (starts at index 2)
                 |      lastIndexOf(item) finds the last occurrence of the item in a string, else -1.                                    userText.lastIndexOf('e') // Returns 6 (last occurrence)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    substring()  |      substring(startIndex) returns substring starting at startIndex.                                                   // userText is "http://google.com"   
                 |                                                                                                                        userText.substring(7)      // Returns "google.com" 
                 |      substring(startIndex, endIndex) returns substring starting at startIndex and ending at endIndex - 1.              userText.substring(13)     // Returns ".com"
                 |      The length of the substring is given by endIndex - startIndex.                                                    userText.substring(0, 7)   // Returns "http://"
                                                                                                                                          userText.substring(13, 17) // Returns ".com"

                                                                                                                                          // Returns last 4: ".com"
                                                                                                                                          userText.substring(userText.length() - 4, 
                                                                                                                                          userText.length())