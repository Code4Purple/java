
---------------------------------------------------------------------------------------------------------------------------------
                                1.10
---------------------------------------------------------------------------------------------------------------------------------

Algorithm  

A list of intructions that, when followed, solves a problem

----------------------------------------------------------------------------------------------------------------------------------
                                1.11
----------------------------------------------------------------------------------------------------------------------------------

Switches

The engineers treated a positive voltage as a "1" and a zero voltage as a "0". 0s and 1s are known as bits 
(binary digits). They built connections of switches, known as circuits, to perform calculations such as multiplying 
two numbers.

Processors and Memory

To support different calculations, circuits called processors were created to process (aka execute) a list of desired calculations, 
with each calculation called an instruction. The instructions were specified by configuring external switches, as in the figure above. 
Processors used to take up entire rooms but today fit on a chip about the size of a postage stamp, containing millions or even 
billions of switches. 

Instructions are stored in a memory. A memory is a circuit that can store 0s and 1s in each of a series of thousands of addressed locations, 
like a series of addressed mailboxes that each can store an envelope (the 0s and 1s). Instructions operate on data, which is also stored in 
memory locations as 0s and 1s.

The programmer-created sequence of instructions is called a program, application, or just app.


Writing computer programs

In the 1940s, programmers originally wrote each instruction using 0s and 1s, such as "001 1100001 001001 1100010". 
Instructions represented as 0s and 1s are known as machine instructions, and a sequence of machine instructions together form an executable 
program (sometimes just called an executable). Because 0s and 1s are hard to comprehend, programmers soon created programs called assemblers 
to automatically translate human readable instructions, such as "Mul 97, #9, 98", known as assembly language instructions, into machine instructions. 
The assembler program thus helped programmers write more complex programs.

In the 1960s and 1970s, programmers created high-level languages to support programming using formulas or algorithms, so a programmer could 
write a formula like: F = (9 / 5) * C + 32. Early high-level languages included FORTRAN (for "Formula Translator") or ALGOL (for "Algorithmic Language"), 
which were more closely related to how humans thought than were machine or assembly instructions.

To support high-level languages, programmers created compilers, which are programs that automatically translate high-level language programs into executable programs.

The approach involves having the compiler generate an executable using machine instructions of a "virtual" processor; such an executable is sometimes called bytecode. 
Then, the real processor runs a program, sometimes called a virtual machine, that executes the instructions in the bytecode. 
Such an approach may yield slower program execution, but has the advantage of portable executables.

----------------------------------------------------------------------------------------------------------------------------------
                                1.12
----------------------------------------------------------------------------------------------------------------------------------

A computer typically consists of several components (see animation below):

    Input/output devices: A screen (or monitor) displays items to a user. The above examples displayed textual items, but today's 
    computers display graphical items, too. A keyboard allows a user to provide input to the computer, typically accompanied by a 
    mouse for graphical displays. Keyboards and mice are increasingly being replaced by touchscreens. Other devices provide additional 
    input and output means, such as microphones, speakers, printers, and USB interfaces. I/O devices are commonly called peripherals.

    Storage: A disk (aka hard drive) stores files and other data, such as program files, song/movie files, or office documents. 
    Disks are non-volatile, meaning they maintain their contents even when powered off. They do so by orienting magnetic particles 
    in a 0 or 1 position. The disk spins under a head that pulses electricity at just the right times to orient specific particles 
    (you can sometimes hear the disk spin and the head clicking as the head moves). New flash storage devices store 0s and 1s in a 
    non-volatile memory, rather than disk by tunneling electrons into special circuits on the memory's chip and removing them with 
    a "flash" of electricity that draws the electrons back out.

    Memory: RAM (random-access memory) temporarily holds data read from storage and is designed such that any address can be accessed 
    much faster than disk, in just a few clock ticks (see below) rather than hundreds of ticks. The "random access" term comes from 
    being able to access any memory location quickly and in arbitrary order, without having to spin a disk to get a proper location 
    under a head. RAM is costlier per bit than disk, due to RAM's higher speed. RAM chips typically appear on a printed-circuit board 
    along with a processor chip. RAM is volatile, losing its contents when powered off. Memory size is typically listed in bits or in 
    bytes, where a byte is 8 bits. Common sizes involve megabytes (million bytes), gigabytes (billion bytes), or terabytes (trillion bytes).

    Processor: The processor runs the computer's programs, reading and executing instructions from memory, performing operations, and 
    reading/writing data from/to memory. When powered on, the processor starts executing the program whose first instruction is (typically) 
    at memory location 0. That program is commonly called the BIOS (basic input/output system), which sets up the computer's basic peripherals. 
    The processor then begins executing a program called an operating system (OS). The operating system allows a user to run other programs 
    and interfaces with the many other peripherals. Processors are also called CPUs (central processing units) or microprocessors 
    (a term introduced when processors began fitting on a single chip, the "micro-" suggesting something small). Because speed is so important, 
    a processor may contain a small amount of RAM on its own chip, called cache memory, accessible in one clock tick rather than several, 
    for maintaining a copy of the most-used instructions/data.

    Clock: A processor's instructions execute at a rate governed by the processor's clock, which ticks at a specific frequency. Processors have 
    clocks that tick at rates such as 1 MHz (1 million ticks/second) for an inexpensive processor ($1) like those found in a microwave oven or 
    washing machine, to 1 GHz (1 billion ticks/second) for costlier ($10-$100) processors like those found in mobile phones and desktop computers. 
    Executing about 1 instruction per clock tick, processors thus execute millions or billions of instructions per second.

Computers typically run multiple programs simultaneously, such as a web browser, an office application, a photo editing program, etc. 
The operating system actually runs a little of program A, then a little of program B, etc., switching between programs thousands of times a second.

After computers were invented and occupied entire rooms, engineers created smaller switches called transistors, which in 1958 were integrated onto a 
single chip called an integrated circuit, or IC. Engineers continued to make transistors smaller, leading to Moore's Law: the doubling of IC capacity 
roughly every 18 months, which continued for several decades.



